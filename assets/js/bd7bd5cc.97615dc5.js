"use strict";(self.webpackChunkpython_guts=self.webpackChunkpython_guts||[]).push([[2788],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>f});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=r.createContext({}),s=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):p(p({},n),e)),a},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(a),m=t,f=c["".concat(l,".").concat(m)]||c[m]||k[m]||o;return a?r.createElement(f,p(p({ref:n},u),{},{components:a})):r.createElement(f,p({ref:n},u))}));function f(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,p=new Array(o);p[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:t,p[1]=i;for(var s=2;s<o;s++)p[s]=a[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1700:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=a(7462),t=(a(7294),a(3905));const o={tags:["kafka","zookeeper","aiokafka","\u0411\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439"]},p="aiokafka",i={unversionedId:"notes/infrastructure/aiokafka",id:"notes/infrastructure/aiokafka",title:"aiokafka",description:"\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Apache Kafka \u0432 Python \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 kafka-python. \u0417\u0434\u0435\u0441\u044c \u0436\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0433\u043e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0432\u043e\u0439\u043d\u0438\u043a\u0430 aiokafka, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0441\u043d\u043e\u0432\u0430\u043d \u043d\u0430 kafka-python.",source:"@site/docs/notes/infrastructure/aiokafka.md",sourceDirName:"notes/infrastructure",slug:"/notes/infrastructure/aiokafka",permalink:"/python-guts/notes/infrastructure/aiokafka",draft:!1,editUrl:"https://github.com/insaze/python-guts/tree/main/docs/notes/infrastructure/aiokafka.md",tags:[{label:"kafka",permalink:"/python-guts/tags/kafka"},{label:"zookeeper",permalink:"/python-guts/tags/zookeeper"},{label:"aiokafka",permalink:"/python-guts/tags/aiokafka"},{label:"\u0411\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439",permalink:"/python-guts/tags/\u0431\u0440\u043e\u043a\u0435\u0440\u044b-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439"}],version:"current",frontMatter:{tags:["kafka","zookeeper","aiokafka","\u0411\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439"]},sidebar:"tutorialSidebar",previous:{title:"\u0418\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430",permalink:"/python-guts/notes/infrastructure/"},next:{title:"\u0412\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435",permalink:"/python-guts/notes/infrastructure/venv"}},l={},s=[{value:"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430",id:"\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430",level:2},{value:"\u041a\u043e\u043d\u0444\u0438\u0433",id:"\u043a\u043e\u043d\u0444\u0438\u0433",level:2},{value:"Producer",id:"producer",level:2},{value:"Consumer",id:"consumer",level:2},{value:"\u0417\u0430\u043f\u0443\u0441\u043a",id:"\u0437\u0430\u043f\u0443\u0441\u043a",level:2},{value:"\u0421\u0441\u044b\u043b\u043a\u0438",id:"\u0441\u0441\u044b\u043b\u043a\u0438",level:2}],u={toc:s},c="wrapper";function k(e){let{components:n,...a}=e;return(0,t.kt)(c,(0,r.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"aiokafka"},"aiokafka"),(0,t.kt)("p",null,"\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Apache Kafka \u0432 Python \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 ",(0,t.kt)("a",{parentName:"p",href:"https://kafka-python.readthedocs.io/en/master/"},"kafka-python"),". \u0417\u0434\u0435\u0441\u044c \u0436\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0433\u043e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0432\u043e\u0439\u043d\u0438\u043a\u0430 ",(0,t.kt)("inlineCode",{parentName:"p"},"aiokafka"),", \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0441\u043d\u043e\u0432\u0430\u043d \u043d\u0430 ",(0,t.kt)("inlineCode",{parentName:"p"},"kafka-python"),"."),(0,t.kt)("h2",{id:"\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ pip install aiokafka\n")),(0,t.kt)("p",null,"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0430\u0442\u0442\u0435\u0440\u043d Producer-Consumer. Producer \u0431\u0443\u0434\u0435\u0442 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0433\u043e\u0434\u0443, \u0430 Consumer, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0435\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c."),(0,t.kt)("p",null,"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0430\u043f\u0438\u0448\u0435\u043c ",(0,t.kt)("strong",{parentName:"p"},"docker-compose.yml")," \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'2\'\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:latest\n    environment:\n      ZOOKEEPER_CLIENT_PORT: 2181\n      ZOOKEEPER_TICK_TIME: 2000\n    ports:\n      - "22181:2181"\n\n  kafka:\n    image: confluentinc/cp-kafka:latest\n    depends_on:\n      - zookeeper\n    ports:\n      - "29092:29092"\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n')),(0,t.kt)("p",null,"\u0417\u0430\u043f\u0443\u0441\u043a:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker-compose up -d\n")),(0,t.kt)("p",null,"\u0414\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u0447\u0442\u043e \u0434\u0432\u0430 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u0434\u043d\u044f\u043b\u0438\u0441\u044c:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Creating aiokafka_zookeeper_1 ... done\nCreating aiokafka_kafka_1     ... done\n")),(0,t.kt)("p",null,"Apache Kafka \u043f\u043e\u0434\u043d\u0438\u043c\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 29092."),(0,t.kt)("h2",{id:"\u043a\u043e\u043d\u0444\u0438\u0433"},"\u041a\u043e\u043d\u0444\u0438\u0433"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"config.py")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},"HOST = 'localhost'\nPORT = 29092\nWEATHER_TOPIC = 'weather'\n")),(0,t.kt)("h2",{id:"producer"},"Producer"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"producer.py")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nimport json\nimport random\nfrom aiokafka import AIOKafkaProducer\n\nimport config\n\n\ndef serializer(value):\n    """\n    \u041e\u0431\u043c\u0435\u043d \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b\n    \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u043d\u0430\u0448\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 JSON, \u0430 \u0437\u0430\u0442\u0435\u043c \u0432 \u0431\u0430\u0439\u0442\u044b\n    """\n    return json.dumps(value).encode()\n\n\nasync def produce():\n    producer = AIOKafkaProducer(\n        bootstrap_servers=f\'{config.HOST}:{config.PORT}\',\n        value_serializer=serializer,\n        compression_type="gzip"\n    )\n    await producer.start()\n    try:\n        while True:\n            data = {\n                "temp": random.randint(10, 20),\n                "weather": random.choice(("rainy", "sunny"))\n            }\n            await producer.send(config.WEATHER_TOPIC, data)\n            await asyncio.sleep(random.randint(1, 5))\n    finally:\n        await producer.stop()\n\n\nif __name__ == \'__main__\':\n    asyncio.run(produce())\n')),(0,t.kt)("h2",{id:"consumer"},"Consumer"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"consumer.py")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nimport json\nfrom aiokafka import AIOKafkaConsumer\n\nimport config\n\n\ndef deserializer(serialized):\n    """\n    \u0414\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n    """\n    return json.loads(serialized)\n\n\nasync def event_handler(value):\n    """\n    \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435,\n    \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f\n    """\n    print(f"Temperature: {value[\'temp\']}, weather: {value[\'weather\']}")\n\n\nasync def consume():\n    consumer = AIOKafkaConsumer(\n        config.WEATHER_TOPIC,\n        bootstrap_servers=f\'{config.HOST}:{config.PORT}\',\n        value_deserializer=deserializer\n    )\n    await consumer.start()\n    try:\n        async for msg in consumer:\n            await event_handler(msg.value)\n    finally:\n        await consumer.stop()\n\n\nif __name__ == \'__main__\':\n    asyncio.run(consume())\n')),(0,t.kt)("h2",{id:"\u0437\u0430\u043f\u0443\u0441\u043a"},"\u0417\u0430\u043f\u0443\u0441\u043a"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ python3 producer.py\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ python3 consumer.py\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"Temperature: 18, weather: rainy\nTemperature: 12, weather: sunny\nTemperature: 12, weather: sunny\nTemperature: 13, weather: rainy\nTemperature: 13, weather: sunny\nTemperature: 18, weather: sunny\nTemperature: 16, weather: sunny\nTemperature: 14, weather: sunny\nTemperature: 16, weather: sunny\nTemperature: 19, weather: rainy\nTemperature: 19, weather: sunny\n")),(0,t.kt)("h2",{id:"\u0441\u0441\u044b\u043b\u043a\u0438"},"\u0421\u0441\u044b\u043b\u043a\u0438"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://aiokafka.readthedocs.io/en/stable/index.html"},"aiokafka. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://www.openlogic.com/blog/using-kafka-zookeeper#what-is-zookeeper"},"Using Kafka with ZooKeeper"))))}k.isMDXComponent=!0}}]);