"use strict";(self.webpackChunkpython_guts=self.webpackChunkpython_guts||[]).push([[6165],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(t),d=a,h=c["".concat(p,".").concat(d)]||c[d]||m[d]||o;return t?r.createElement(h,l(l({ref:n},s),{},{components:t})):r.createElement(h,l({ref:n},s))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5189:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={tags:["\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430","math"]},l="\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432 Python",i={unversionedId:"notes/basics/rounding",id:"notes/basics/rounding",title:"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432 Python",description:"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437",source:"@site/docs/notes/basics/rounding.md",sourceDirName:"notes/basics",slug:"/notes/basics/rounding",permalink:"/python-guts/notes/basics/rounding",draft:!1,editUrl:"https://github.com/insaze/python-guts/tree/main/docs/notes/basics/rounding.md",tags:[{label:"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430",permalink:"/python-guts/tags/\u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430"},{label:"math",permalink:"/python-guts/tags/math"}],version:"current",frontMatter:{tags:["\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430","math"]},sidebar:"tutorialSidebar",previous:{title:"\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439",permalink:"/python-guts/notes/basics/operator-precedence"},next:{title:"\u0418\u043d\u0442\u0435\u0440\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a",permalink:"/python-guts/notes/basics/string-interning"}},p={},u=[{value:"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437",id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0432\u043d\u0438\u0437",level:2},{value:"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0440\u0445",id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0432\u0432\u0435\u0440\u0445",level:2},{value:"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0434\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e \u0446\u0435\u043b\u043e\u0433\u043e",id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0434\u043e-\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e-\u0446\u0435\u043b\u043e\u0433\u043e",level:2},{value:"\u0411\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435",id:"\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435-\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435",level:2},{value:"\u041d\u044e\u0430\u043d\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f round",id:"\u043d\u044e\u0430\u043d\u0441-\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f-round",level:3},{value:"\u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f",id:"\u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435-\u043c\u0435\u0442\u043e\u0434\u043e\u0432-\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f",level:2},{value:"\u0421\u0441\u044b\u043b\u043a\u0438",id:"\u0441\u0441\u044b\u043b\u043a\u0438",level:2}],s={toc:u},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0432-python"},"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432 Python"),(0,a.kt)("h2",{id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0432\u043d\u0438\u0437"},"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def floor(x):\n    """\n    >>> floor(4.2)\n    4\n    >>> floor(4.6)\n    4\n    >>> floor(4.0)\n    4\n    """\n    return int(x)\n')),(0,a.kt)("p",null,"\u0422\u0430\u043a\u0436\u0435 \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 ",(0,a.kt)("em",{parentName:"p"},"math")," -- ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/math.html#math.floor"},"math.floor")),(0,a.kt)("h2",{id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0432\u0432\u0435\u0440\u0445"},"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0440\u0445"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def ceil(x):\n    """\n    >>> ceil(4.2)\n    5\n    >>> ceil(4.6)\n    5\n    >>> ceil(4.0)\n    4\n    """\n    return int(x + (x % 1 != 0))\n')),(0,a.kt)("p",null,"\u0422\u0430\u043a\u0436\u0435 \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 ",(0,a.kt)("em",{parentName:"p"},"math")," -- ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/math.html#math.ceil"},"math.ceil")),(0,a.kt)("h2",{id:"\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435-\u0434\u043e-\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e-\u0446\u0435\u043b\u043e\u0433\u043e"},"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0434\u043e \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0433\u043e \u0446\u0435\u043b\u043e\u0433\u043e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def round_nearest(x):\n    """\n    >>> round_nearest(4.2)\n    4\n    >>> round_nearest(4.6)\n    5\n    >>> round_nearest(4.0)\n    4\n    """\n    return int(x + .5)\n')),(0,a.kt)("h2",{id:"\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435-\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435"},"\u0411\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def round_even(x):\n    """\n    >>> round_even(2.5)\n    2\n    >>> round_even(3.5)\n    4\n    >>> round_even(3.0)\n    3\n    """\n    return int(x + (int(x) % 2) * 0.5)\n')),(0,a.kt)("p",null,"\u0422\u0430\u043a\u0436\u0435 \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0432 Python -- ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#round"},"round"),"."),(0,a.kt)("p",null,"\u0414\u0430, ",(0,a.kt)("inlineCode",{parentName:"p"},"round")," \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435, \u0430 \u043d\u0435 \u043a \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u043c\u0443 \u0446\u0435\u043b\u043e\u043c\u0443. "),(0,a.kt)("h3",{id:"\u043d\u044e\u0430\u043d\u0441-\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f-round"},"\u041d\u044e\u0430\u043d\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f round"),(0,a.kt)("p",null,"\u0415\u0441\u0442\u044c \u043e\u0434\u0438\u043d \u043d\u044e\u0430\u043d\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">>> round(2.65, 1)\n2.6\n>>> round(2.85, 1)\n2.9\n")),(0,a.kt)("p",null,"\u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0438\u0437-\u0437\u0430 \u0442\u043e\u043d\u043a\u043e\u0441\u0442\u0435\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 ",(0,a.kt)("inlineCode",{parentName:"p"},"2.85")," \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0435 ",(0,a.kt)("inlineCode",{parentName:"p"},"2.85"),". \u042d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">>> from fractions import Fraction\n>>> num1 = Fraction(2.85)\n>>> num2 = Fraction('2.85')\n>>> num1 > num2\nTrue\n")),(0,a.kt)("h2",{id:"\u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435-\u043c\u0435\u0442\u043e\u0434\u043e\u0432-\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f"},"\u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f"),(0,a.kt)("p",null,"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e dunder-\u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 ",(0,a.kt)("inlineCode",{parentName:"p"},"round"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"math.floor")," \u0438 ",(0,a.kt)("inlineCode",{parentName:"p"},"math.ceil"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class MyNumber(float):\n    def __floor__(self):\n        print("\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437")\n        return -2 * super().__floor__()\n\n    def __ceil__(self):\n        print("\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0440\u0445")\n        return 2 * super().__ceil__()\n\n    def __round__(self, n=None):\n        print("\u0411\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435")\n        return 10 * super().__round__(n)\n\n\nif __name__ == \'__main__\':\n    import math\n\n    num = MyNumber(4.568)\n    print(math.ceil(num))\n    print(math.floor(num))\n    print(round(num, 2))\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0440\u0445\n10\n\u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437\n-8\n\u0411\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435\n45.7\n")),(0,a.kt)("h2",{id:"\u0441\u0441\u044b\u043b\u043a\u0438"},"\u0421\u0441\u044b\u043b\u043a\u0438"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/python-guts/notes/basics/decimal"},"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://metanit.com/python/tutorial/6.4.php"},"\u041c\u043e\u0434\u0443\u043b\u044c decimal"))))}m.isMDXComponent=!0}}]);